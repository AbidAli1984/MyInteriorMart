@model IEnumerable<BOL.BANNER.Slideshow>

@{
    ViewData["Title"] = "Manage Slides - Banner Size: 1600 x 300";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    ViewData["RowCount"] = Model.Count();
}

<!-- Begin: Breadcrumb -->
@{
    ViewData["BC-1"] = "Slide Show";
    ViewData["BC-2"] = "Manage";
    ViewData["BC-3"] = ViewData["Title"];
    ViewData["BT-Text-1"] = "Manage";
    ViewData["BT-Link-1"] = "/Slides/Manage";
    ViewData["BT-Text-2"] = "Create";
    ViewData["BT-Link-2"] = "/Slides/Manage/Create";
    ViewData["BT-Text-3"] = "";
    ViewData["BT-Link-3"] = "";
    ViewData["BT-Text-4"] = "";
    ViewData["BT-Link-4"] = "";
}
<!-- End: Breadcrumb -->

<h5>
    @ViewData["Title"]
</h5>
<hr />

@section CSS{
    <link href="~/css/MIMUploadButton.css" rel="stylesheet" />
}


@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add().RenderedAs((model, row) => model.SlideID).Titled("#").Css("text-center");
        columns.Add(model => $"<img src='/FileManager/Slideshow/{model.Title}.jpg' width='50px'>").Encoded(false).Titled("Image");
        columns.Add(model => $"<form action='/FileManager/Slideshow/UploadSlide' method='post' enctype='multipart/form-data'><input type='hidden' name='directory' value='\\FileManager\\Slideshow\\' required><input type='hidden' name='imageName' value='{model.Title}' required><label class='myFile'><i class='fa fa-file btn btn-sm btn-info' style='margin-right:10px;'></i><input type='file' name='file' required /></label><button type='submit' class='btn btn-sm btn-primary'><i class='fa fa-upload'></i> Upload</button></form>").Encoded(false).Titled("Upload");
        columns.Add(model => model.AltAttribute).Titled("Alt Attribute");
        columns.Add(model => model.Title).Titled("Title Attribute");
        columns.Add(model => model.TargetURL).Titled("Target URL");
        columns.Add(model => model.Priority).Titled("Priority");
        columns.Add(model => $"<a href=\"/Slides/Manage/Edit/{model.SlideID}\" class=\"btn btn-primary btn-sm\">Edit</a> <a href=\"/Slides/Manage/Delete/{model.SlideID}\" class=\"btn btn-danger btn-sm\">Delete</a>").Encoded(false).Titled("Actions");
    })
    .Filterable()
    .Sortable()
    .Pageable(pager =>
    {
        pager.PageSizes = new Dictionary<Int32, String> { { 10, "10" }, { 50, "50" }, { 75, "75" }, { 100, "100" }, { 0, "All" } };
        pager.ShowPageSizes = true;
        pager.PagesToDisplay = 3;
        pager.CurrentPage = 1;
        pager.RowsPerPage = 10;
    })
    .Using(GridFilterMode.Row)
    .Empty("No data found")
)