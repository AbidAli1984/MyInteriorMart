@inject IDENTITY.Services.IUsersAndRoles usersAndRoles
@inject BAL.Services.Contracts.IUserService userService
@inject UserManager<IdentityUser>  userManager
@inject IAddresses addressManager

@{
    ViewData["Title"] = "All Unblocked Users";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    var listUnblockedUsers = await usersAndRoles.ListUnblockedUserAsync();
}

@{
    ViewData["BC-1"] = "Manage";
    ViewData["BC-2"] = "Users";
    ViewData["BC-3"] = ViewData["Title"];
    ViewData["BT-Text"] = "Create Role";
    ViewData["BT-Link"] = "/UsersAndRoles/ManageRoles/CreateRole";
    ViewData["BT-Text2"] = "Assign User To Role";
    ViewData["BT-Link2"] = "/UsersAndRoles/ManageRoles/AssignRole";
    ViewData["BT-Text3"] = "Users";
    ViewData["BT-Link3"] = "/UsersAndRoles/ManageUsers";
    ViewData["BT-Text4"] = "Roles By Role Category";
    ViewData["BT-Link4"] = "/UsersAndRoles/Permissions/Show";
}
<!-- End: -->

<h3>@ViewData["Title"] <span class="badge badge-secondary"><span style="font-size:16px;">@listUnblockedUsers.Count()</span></span></h3>
<hr />

<div class="table-responsive">
    <table id="example1" class="table key-buttons text-md-nowrap display nowrap" style="width:100%">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Date</th>
                <th>Time</th>
                <th>Blocked By</th>
                <th>Mobile</th>
                <th>Country</th>
                <th>City</th>
                <th>Pincode</th>
                <th>Unblocked By</th>
                <th>Unblocked Date</th>
                <th>Unblocked Time</th>
                <th>Action</th>
                <th>View Profile</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in listUnblockedUsers)
            {
                var profile = await userService.GetProfileByOwnerGuid(item.SuspendedTo);
                var suspendedUser = await userManager.FindByIdAsync(item.SuspendedTo);
                var suspendedBy = await userManager.FindByIdAsync(item.SuspendedBy);
                var unsuspendedBy = await userManager.FindByIdAsync(item.UnsuspendedBy);
                var country = await addressManager.CountryDetailsAsync(profile.CountryID);
                var city = await addressManager.CityDetailsAsync(profile.CityID);
                var pincode = await addressManager.PincodeDetailsAsync(profile.PincodeID);
                <tr>
                    <td><span>@(profile != null ? $"{profile.Name}" : "N/A")</span></td>
                    <td>@suspendedUser.Email</td>
                    <td>@item.SuspendedDate.ToString("dd MMM, yyyy")</td>
                    <td>@item.SuspendedDate.ToString("hh:mm tt")</td>
                    <td>@suspendedBy.Email</td>
                    <td>@(suspendedUser.PhoneNumber != null ? $"{suspendedUser.PhoneNumber}" : "Not Available")</td>
                    <td>@(profile != null ? $"{country.Name}" : "N/A")</td>
                    <td>@(profile != null ? $"{city.Name}" : "N/A")</td>
                    <td>@(profile != null ? $"{pincode.PincodeNumber}" : "N/A")</td>
                    <td>@unsuspendedBy.Email</td>
                    <td>@item.UnsuspendedDate.ToString("dd MMM, yyyy")</td>
                    <td>@item.UnsuspendedDate.ToString("hh:mm tt")</td>
                    <td>
                        <!-- Shafi: Block user -->
                        <form action="~/SuperAdministrator/ManageUsers/SuspendUser" method="post">
                            <input type="hidden" name="SuspendedTo" value="@item.SuspendedTo" />
                            <input type="hidden" name="SuspendedBy" value="@item.SuspendedBy" />
                            <button type="submit" class="btn btn-danger-gradient btn-sm"><i class="fas fa-times-circle"></i> <span style="margin-left:3px;">Block This User</span></button>
                        </form>
                        <!-- End: -->
                    </td>
                    <td>
                        <!-- Shafi: View Profile -->
                        <a href="~/SuperAdministrator/ManageUsers/UserProfile/@item.SuspendedTo" class="btn btn-sm btn-purple-gradient">View Profile</a>
                        <!-- End: -->
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts{
    @await Component.InvokeAsync("DataTable")
}